
/**
 *
 * @author 刘济为
 * NewSignForm类用于生成注册界面，是用户端运行的初始界面，也是用户端的主运行程序。每个线程生
 * 成一个NewSignForm类，用于用户填写用户名、密码、IP地址、端口信息。点击连接后会跳转到client
 * 端，进行聊天操作。 
 * @see client_frame 
 * 
 */
package form;

import chat_client.client_frame;
import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class NewSignUpForm extends javax.swing.JFrame {

    /**
     * Creates new form NewSignUpForm
     * @param username 在ui界面获取后得到的用户名的值。 
     * @param address 在ui界面获取后得到的连接的IP地址值。IP地址一定要是公用服务器或者共同
     * 局域网的ip地址以实现连接访问。
     * @param users 已登录的用户集。
     * @param port 访问的端口。
     * @param isConnected 检查是否已连接。
     * @param c_frame 初始化一个client_frame类界面，在后续结束注册后跳转到该聊天界面。
     * @see client_frame
     */
    
    String username, address = "localhost";
    ArrayList<String> users = new ArrayList();
    int port = 2222;
    Boolean isConnected = false;
    
    client_frame c_frame = new client_frame();
    
    /**
     * 
     * 所有需要用到的getter和setter函数
     * 
     */

    public int getPort() {
        return port;
    }

    public void setPort(int port) {
        this.port = port;
    }

    public JTextField getLb_ip_val() {
        return tf_ip_val;
    }

    public void setLb_ip_val(JTextField lb_ip_val) {
        this.tf_ip_val = lb_ip_val;
    }

    public JTextField getTf_pass_val() {
        return tf_pass_val;
    }

    public void setTf_pass_val(JTextField tf_pass_val) {
        this.tf_pass_val = tf_pass_val;
    }

    public JTextField getTf_username_val() {
        return tf_username_val;
    }

    public void setTf_username_val(JTextField tf_username_val) {
        this.tf_username_val = tf_username_val;
    }
    
    /**
     * 构造函数，initComponents是NetBeans自带的构造。
     * 
     * @see initComponents
     */
    
    public NewSignUpForm() {
        initComponents();
        init();
    }
    
    /**
     * 初始化函数，在initComponents执行完毕后执行，用于设置字体、设置图标的位置和格式。
     */
    
    private void init() {
        copyright.setFont(new Font("AppleMyungjo", Font.ITALIC, 15) {
        });
        copyright.setForeground(Color.WHITE);
        
        lb_connect.setText("Connect");
        lb_connect.setHorizontalTextPosition(JLabel.CENTER);
        lb_connect.setVerticalTextPosition(JLabel.CENTER);
        
        lb_anony.setText("Anonymous Login");
        lb_anony.setHorizontalTextPosition(JLabel.CENTER);
        lb_anony.setVerticalTextPosition(JLabel.CENTER);
    }
    
    /**
     * 
     * @param strNum 需要判断的字符串。
     * @return true 如果这个字符串可以转化为整数。
     * false 如果这个字符串无法转化为整数。
     */
    
    public static boolean isNumeric(String strNum) {
        if (strNum == null) {
            return false;
        }
        try {
            int d = Integer.parseInt(strNum);
        } catch (NumberFormatException nfe) {
            return false;
        }
        return true;
    }
    
    
    public String validateIPv4(String IP) {
    String[] nums = IP.split("\\.", -1);
    for (String x : nums) {
      if (x.length() == 0 || x.length() > 3) return "Neither";
      if (x.charAt(0) == '0' && x.length() != 1) return "Neither";
      for (char ch : x.toCharArray()) {
        if (! Character.isDigit(ch)) return "Neither";
      }
      if (Integer.parseInt(x) > 255) return "Neither";
    }
    return "IPv4";
  }

  public String validateIPv6(String IP) {
    String[] nums = IP.split(":", -1);
    String hexdigits = "0123456789abcdefABCDEF";
    for (String x : nums) {
      if (x.length() == 0 || x.length() > 4) return "Neither";
      for (Character ch : x.toCharArray()) {
        if (hexdigits.indexOf(ch) == -1) return "Neither";
      }
    }
    return "IPv6";
  }
  
  /**
   * 
   * @param IP 需要判断的IP地址的字符串
   * @return 返回结果字符串，有三种情况，主要使用到的是判断其不是正常的IP地址。为了判断结果
   * 使用到了另外两个函数。
   * @see validateIPv4
   * @see validateIPv6
   */

  public String validIPAddress(String IP) {
    if (IP.chars().filter(ch -> ch == '.').count() == 3) {
      return validateIPv4(IP);
    }
    else if (IP.chars().filter(ch -> ch == ':').count() == 7) {
      return validateIPv6(IP);
    }
    else return "Neither";
  }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
  
     /**
      * NetBeans项目自动生成的代码。
      */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        iconImage = new javax.swing.JLabel();
        copyright = new javax.swing.JLabel();
        lb_ip = new javax.swing.JLabel();
        lb_pass = new javax.swing.JLabel();
        lb_port = new javax.swing.JLabel();
        lb_username = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        tf_username_val = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        tf_pass_val = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        tf_ip_val = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        tf_port_val = new javax.swing.JTextField();
        lb_connect = new javax.swing.JLabel();
        lb_anony = new javax.swing.JLabel();
        rightPane = new javax.swing.JLabel();
        leftPane = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        iconImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/flight.png"))); // NOI18N
        jLayeredPane1.add(iconImage);
        iconImage.setBounds(180, 130, 140, 150);

        copyright.setText("@copyright 丁家巍 李彧 刘济为");
        jLayeredPane1.add(copyright);
        copyright.setBounds(160, 560, 220, 70);

        lb_ip.setFont(new java.awt.Font("Bradley Hand", 0, 20)); // NOI18N
        lb_ip.setForeground(new java.awt.Color(255, 255, 255));
        lb_ip.setText("IPAddress");
        jLayeredPane1.add(lb_ip);
        lb_ip.setBounds(480, 350, 120, 30);

        lb_pass.setFont(new java.awt.Font("Bradley Hand", 0, 20)); // NOI18N
        lb_pass.setForeground(new java.awt.Color(255, 255, 255));
        lb_pass.setText("Password");
        jLayeredPane1.add(lb_pass);
        lb_pass.setBounds(480, 220, 120, 60);

        lb_port.setFont(new java.awt.Font("Bradley Hand", 0, 20)); // NOI18N
        lb_port.setForeground(new java.awt.Color(255, 255, 255));
        lb_port.setText("Port");
        jLayeredPane1.add(lb_port);
        lb_port.setBounds(480, 450, 120, 30);

        lb_username.setFont(new java.awt.Font("Bradley Hand", 0, 20)); // NOI18N
        lb_username.setForeground(new java.awt.Color(255, 255, 255));
        lb_username.setText("Username");
        jLayeredPane1.add(lb_username);
        lb_username.setBounds(475, 120, 120, 30);

        jLabel5.setFont(new java.awt.Font("HanziPen SC", 3, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Make Communication Easier");
        jLayeredPane1.add(jLabel5);
        jLabel5.setBounds(100, 240, 340, 140);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/WechatIMG7266.png"))); // NOI18N
        jLayeredPane1.add(jLabel6);
        jLabel6.setBounds(100, 480, 270, 90);
        jLayeredPane1.add(jSeparator1);
        jSeparator1.setBounds(470, 190, 340, 10);

        tf_username_val.setBackground(new java.awt.Color(51, 37, 78));
        tf_username_val.setFont(new java.awt.Font("Bangla MN", 0, 18)); // NOI18N
        tf_username_val.setForeground(new java.awt.Color(204, 204, 204));
        tf_username_val.setText("Enter UserName");
        tf_username_val.setBorder(null);
        tf_username_val.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_username_valActionPerformed(evt);
            }
        });
        jLayeredPane1.add(tf_username_val);
        tf_username_val.setBounds(470, 160, 320, 30);
        jLayeredPane1.add(jSeparator5);
        jSeparator5.setBounds(470, 300, 340, 12);

        tf_pass_val.setBackground(new java.awt.Color(51, 37, 78));
        tf_pass_val.setFont(new java.awt.Font("Bangla MN", 0, 18)); // NOI18N
        tf_pass_val.setForeground(new java.awt.Color(204, 204, 204));
        tf_pass_val.setText("Enter Password");
        tf_pass_val.setBorder(null);
        tf_pass_val.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_pass_valActionPerformed(evt);
            }
        });
        jLayeredPane1.add(tf_pass_val);
        tf_pass_val.setBounds(470, 270, 320, 30);
        jLayeredPane1.add(jSeparator6);
        jSeparator6.setBounds(470, 420, 340, 12);

        tf_ip_val.setBackground(new java.awt.Color(51, 37, 78));
        tf_ip_val.setFont(new java.awt.Font("Bangla MN", 0, 18)); // NOI18N
        tf_ip_val.setForeground(new java.awt.Color(204, 204, 204));
        tf_ip_val.setText("Default:localhost");
        tf_ip_val.setBorder(null);
        tf_ip_val.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_ip_valActionPerformed(evt);
            }
        });
        jLayeredPane1.add(tf_ip_val);
        tf_ip_val.setBounds(470, 390, 350, 30);
        jLayeredPane1.add(jSeparator7);
        jSeparator7.setBounds(470, 510, 340, 12);

        tf_port_val.setBackground(new java.awt.Color(51, 37, 78));
        tf_port_val.setFont(new java.awt.Font("Bangla MN", 0, 18)); // NOI18N
        tf_port_val.setForeground(new java.awt.Color(204, 204, 204));
        tf_port_val.setText("Default:2222");
        tf_port_val.setBorder(null);
        tf_port_val.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_port_valActionPerformed(evt);
            }
        });
        jLayeredPane1.add(tf_port_val);
        tf_port_val.setBounds(470, 480, 320, 30);

        lb_connect.setFont(new java.awt.Font("Lantinghei SC", 0, 14)); // NOI18N
        lb_connect.setForeground(new java.awt.Color(255, 255, 255));
        lb_connect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_connect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/btnsignUp.png"))); // NOI18N
        lb_connect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_connect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_connectMouseClicked(evt);
            }
        });
        jLayeredPane1.add(lb_connect);
        lb_connect.setBounds(550, 540, 90, 50);

        lb_anony.setFont(new java.awt.Font("Lantinghei SC", 1, 9)); // NOI18N
        lb_anony.setForeground(new java.awt.Color(255, 255, 255));
        lb_anony.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/btnsignUp.png"))); // NOI18N
        lb_anony.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_anony.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_anonyMouseClicked(evt);
            }
        });
        jLayeredPane1.add(lb_anony);
        lb_anony.setBounds(680, 540, 140, 50);

        rightPane.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/rightPanel.png"))); // NOI18N
        jLayeredPane1.add(rightPane);
        rightPane.setBounds(430, 20, 490, 600);

        leftPane.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/leftPanelBack3.png"))); // NOI18N
        jLayeredPane1.add(leftPane);
        leftPane.setBounds(30, 0, 550, 640);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 907, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_username_valActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_username_valActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_username_valActionPerformed

    private void tf_pass_valActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_pass_valActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_pass_valActionPerformed

    private void tf_ip_valActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_ip_valActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_ip_valActionPerformed

    private void tf_port_valActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_port_valActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_port_valActionPerformed

    /**
     * 点击Connect后发生的行为。获取用户在框内输入的用户名、密码、IP地址、端口内容并将其内容
     * 传给c_frame。之后将NewSignUpForm类的这个界面关闭并打开client_frame界面。
     * @param evt 
     * @see client_frame
     */
    private void lb_connectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_connectMouseClicked
        if(isConnected == false) {
            if(tf_username_val.getText().equals("Enter UserName")) {
                JOptionPane.showMessageDialog(this, "Please type a user name!");
                return;
            }
            else
                c_frame.setUsername(tf_username_val.getText());
            
            if(tf_pass_val.getText().equals("Enter Password"))
                c_frame.setPassword("");
            else
                c_frame.setPassword(tf_pass_val.getText());
            

            if(!tf_ip_val.getText().contains("localhost"))
            {
                if(validIPAddress(tf_ip_val.getText()).equals("Neither"))
                    JOptionPane.showMessageDialog(this, "Invalid IP address!");
                else {
                    c_frame.setAddress(tf_ip_val.getText());
                    if(isNumeric(tf_port_val.getText())) {
                        c_frame.setPort(Integer.parseInt(tf_port_val.getText()));

                        c_frame.setIsConnectClicked(true);
                        c_frame.setIsAnonyClicked(false);
                        //c_frame.setIsConnected(true);

                        this.setVisible(false);
                        c_frame.setVisible(true);
                        c_frame.start_client_frame();
                        dispose();
                    }
                    else if(tf_port_val.getText().contains("Default:2222"))
                    {
                        c_frame.setPort(2222);
                        
                        c_frame.setIsConnectClicked(true);
                        c_frame.setIsAnonyClicked(false);
                        //c_frame.setIsConnected(true);

                        this.setVisible(false);
                        c_frame.setVisible(true);
                        c_frame.start_client_frame();
                        dispose();
                    }
                    else
                        JOptionPane.showMessageDialog(this, "Please enter port as an integer!");
                }
            }
            else
            {
                c_frame.setAddress("localhost");
                if(isNumeric(tf_port_val.getText())) {
                    c_frame.setPort(Integer.parseInt(tf_port_val.getText()));
                    
                    c_frame.setIsConnectClicked(true);
                    c_frame.setIsAnonyClicked(false);
                    //c_frame.setIsConnected(true);

                    this.setVisible(false);
                    c_frame.setVisible(true);
                    c_frame.start_client_frame();
                    dispose();
                }
                else if(tf_port_val.getText().contains("Default:2222")) {
                    c_frame.setPort(2222);
                    
                    c_frame.setIsConnectClicked(true);
                    c_frame.setIsAnonyClicked(false);
                    //c_frame.setIsConnected(true);

                    this.setVisible(false);
                    c_frame.setVisible(true);
                    c_frame.start_client_frame();
                    dispose();
                }
                else 
                    JOptionPane.showMessageDialog(this, "Please enter port as an integer!");
            }
        }
        else if(isConnected == true) {
            JOptionPane.showMessageDialog(this, "You are already connected.");
        }
    }//GEN-LAST:event_lb_connectMouseClicked

    /**
     * 点击Anonymous Login后发生的行为。匿名登录直接将用户名、密码等参数设为空。将NewSignUpForm类
     * 的这个界面关闭并打开client_frame界面。
     * @param evt 
     * @see client_frame
     */
    private void lb_anonyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_anonyMouseClicked

        if(isConnected == false) {
            c_frame.setUsername("");
            c_frame.setPassword("");

            if(!tf_ip_val.getText().contains("localhost"))
            {
                if(validIPAddress(tf_ip_val.getText()).equals("Neither"))
                    JOptionPane.showMessageDialog(this, "Invalid IP address!");
                else {
                    c_frame.setAddress(tf_ip_val.getText());
                    if(isNumeric(tf_port_val.getText())) {
                        c_frame.setPort(Integer.parseInt(tf_port_val.getText()));

                        c_frame.setIsConnectClicked(true);
                        c_frame.setIsAnonyClicked(true);
                        //c_frame.setIsConnected(false);

                        this.setVisible(false);
                        c_frame.setVisible(true);
                        c_frame.start_client_frame();
                        dispose();
                    }
                    else if(tf_port_val.getText().contains("Default:2222"))
                    {
                        c_frame.setPort(2222);
                        
                        c_frame.setIsConnectClicked(true);
                        c_frame.setIsAnonyClicked(true);
                        //c_frame.setIsConnected(false);

                        this.setVisible(false);
                        c_frame.setVisible(true);
                        c_frame.start_client_frame();
                        dispose();
                    }
                    else
                        JOptionPane.showMessageDialog(this, "Please enter port as an integer!");
                }
            }
            else
            {
                c_frame.setAddress("localhost");
                if(isNumeric(tf_port_val.getText())) {
                    c_frame.setPort(Integer.parseInt(tf_port_val.getText()));
                    
                    c_frame.setIsConnectClicked(true);
                    c_frame.setIsAnonyClicked(true);
                    //c_frame.setIsConnected(false);

                    this.setVisible(false);
                    c_frame.setVisible(true);
                    c_frame.start_client_frame();
                    dispose();
                }
                else if(tf_port_val.getText().contains("Default:2222")) {
                    c_frame.setPort(2222);
                    
                    c_frame.setIsConnectClicked(true);
                    c_frame.setIsAnonyClicked(true);
                    //c_frame.setIsConnected(false);

                    this.setVisible(false);
                    c_frame.setVisible(true);
                    c_frame.start_client_frame();
                    dispose();
                }
                else 
                    JOptionPane.showMessageDialog(this, "Please enter port as an integer!");
            }
        }
        else if(isConnected == true) {
            JOptionPane.showMessageDialog(this, "You are already connected.");
        }
    }//GEN-LAST:event_lb_anonyMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewSignUpForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewSignUpForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewSignUpForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewSignUpForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewSignUpForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel copyright;
    private javax.swing.JLabel iconImage;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JLabel lb_anony;
    private javax.swing.JLabel lb_connect;
    private javax.swing.JLabel lb_ip;
    private javax.swing.JLabel lb_pass;
    private javax.swing.JLabel lb_port;
    private javax.swing.JLabel lb_username;
    private javax.swing.JLabel leftPane;
    private javax.swing.JLabel rightPane;
    private javax.swing.JTextField tf_ip_val;
    private javax.swing.JTextField tf_pass_val;
    private javax.swing.JTextField tf_port_val;
    private javax.swing.JTextField tf_username_val;
    // End of variables declaration//GEN-END:variables
}
